AWSTemplateFormatVersion: 2010-09-09 
Description:   
  This template creates wordpress stack based on AWS bestest practice.
#Security Groups Resources



Parameters:  

  VPCStackName:
          Description: The name of the VPC stack that exports the values
          Type: String

  SGStackName:
          Description: The name of the SG stack that exports the values
          Type: String
  
  OperatorEMail:
    Description: EMail address to notify if there are any scaling operations
    Type: String
    Default: info@lbncyberlabs.com
    AllowedPattern: >-
      ([a-zA-Z0-9_\-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)
    ConstraintDescription: must be a valid email address.
    
  EC2KeyName:
    Description: Name of an EC2 KeyPair to enable SSH access to the instance.
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: Must be the name of an existing EC2 KeyPair.

  ASAMIID:
    Description: AMI ID of APP1 Instane, please enter App1 AMI ID.
    Type: String
    Default: ami-07d0cf3af28718ef8
    ConstraintDescription: Must be the ID of an existing AMI.
  WebAsgMax:
    AllowedPattern: ^((?!0$)[1-2]?[0-9]|30)$
    ConstraintDescription: Must be a number between 1 and 30.
    Default: 1
    Description: Specifies the maximum number of EC2 instances in the Web Autoscaling Group.
    Type: String

  WebAsgMin:
    AllowedPattern: ^([0-0]?[0-9]|10)$
    ConstraintDescription: Must be a number between 0 and 10.
    Default: 1
    Description: Specifies the minimum number of EC2 instances in the Web Autoscaling Group.
    Type: String

  WebServerCapacity:
    Description: The initial number of WebServer instances
    Default: '1'
    Type: Number
    ConstraintDescription: must be between 1 and 20 EC2 instances
  InstanceType:
    Description: WebServers EC2 instance type
    Type: String
    Default: t3.micro
    AllowedValues:
      - t3.micro
      - t3.medium
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.8xlarge
      - m5.12xlarge
      - m5.16xlarge
 
    ConstraintDescription: Must be a valid EC2 instance type.



Resources:

  NotificationTopic:
    Type: 'AWS::SNS::Topic'
    Properties:
      Subscription:
        - Endpoint: !Ref OperatorEMail
          Protocol: email

  NetworkLoadBalancer:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      Subnets: 
        - Fn::ImportValue: !Sub '${VPCStackName}-PrivateSubnet1'
        - Fn::ImportValue: !Sub '${VPCStackName}-PrivateSubnet2'
      Type: network  
      Tags:
      - Key: Name
        Value: !Sub Network Load Balancer

  NLBTargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      Port: 5060
      Protocol: UDP
      VpcId:
        Fn::ImportValue: !Sub '${VPCStackName}-VPC'  
      
  NLBListenerNoSslCertificate:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref NLBTargetGroup
      LoadBalancerArn: !Ref NetworkLoadBalancer
      Port: '5060'
      Protocol: UDP
    

#Web Server
  WebServerGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      VPCZoneIdentifier:
        - Fn::ImportValue: !Sub '${VPCStackName}-PrivateSubnet1'
        - Fn::ImportValue: !Sub '${VPCStackName}-PrivateSubnet2'
      LaunchConfigurationName: !Ref LaunchConfig
      MinSize: !Ref WebAsgMin
      MaxSize: !Ref WebAsgMax
      DesiredCapacity: !Ref WebServerCapacity
      TargetGroupARNs:
        - !Ref NLBTargetGroup
      NotificationConfiguration:
        TopicARN: !Ref NotificationTopic
        NotificationTypes:
          - 'autoscaling:EC2_INSTANCE_LAUNCH'
          - 'autoscaling:EC2_INSTANCE_LAUNCH_ERROR'
          - 'autoscaling:EC2_INSTANCE_TERMINATE'
          - 'autoscaling:EC2_INSTANCE_TERMINATE_ERROR'


  WebServerScaleUpPolicy:
    Type: 'AWS::AutoScaling::ScalingPolicy'
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref WebServerGroup
      Cooldown: '60'
      ScalingAdjustment: '1'

  WebServerScaleDownPolicy:
    Type: 'AWS::AutoScaling::ScalingPolicy'
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref WebServerGroup
      Cooldown: '60'
      ScalingAdjustment: '-1'

  CPUAlarmHigh:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: Scale-up if CPU > 90% for 10 minutes
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: '300'
      EvaluationPeriods: '2'
      Threshold: '90'
      AlarmActions:
        - !Ref WebServerScaleUpPolicy
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref WebServerGroup
      ComparisonOperator: GreaterThanThreshold

  CPUAlarmLow:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: Scale-down if CPU < 70% for 10 minutes
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: '300'
      EvaluationPeriods: '2'
      Threshold: '70'
      AlarmActions:
        - !Ref WebServerScaleDownPolicy
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref WebServerGroup
      ComparisonOperator: LessThanThreshold

  LaunchConfig:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Properties:
      ImageId: !Ref ASAMIID
      InstanceType: !Ref InstanceType
      SecurityGroups:
        - Fn::ImportValue: !Sub '${SGStackName}-AsteriskServerSecurityGroup'
      KeyName: !Ref EC2KeyName
          
Outputs:
  URL:
    Description: Application Load Balancer Endpoint
    Value: !Join 
      - ''
      - - 'http://'
        - !GetAtt 
          - NetworkLoadBalancer
          - DNSName          